buildvariants:
  - display_name: Ubuntu 18.04
    name: ubuntu1804
    run_on:
      - ubuntu1804-small
    tasks:
      - name: unit_tests
      - name: check_pypi_version
      - name: build_docs

  - display_name: Windows
    name: windows
    run_on:
      - windows-vsCurrent-small
    tasks:
      - name: unit_tests

  - display_name: macOS Mojave
    name: macos-1014
    run_on:
      - macos-1014
    tasks:
      - name: unit_tests

functions:
  create virtualenv:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose

          PATH="$PATH:$HOME"

          export LC_ALL=C.UTF-8
          export LANG=C.UTF-8

          if [ "Windows_NT" = "$OS" ]; then
            "/cygdrive/c/python/python39/python.exe" -m venv venv
            # venv creates its Scripts/activate file with CLRF endings, which
            # cygwin bash does not like. dos2unix it
            # (See https://bugs.python.org/issue32451)
            dos2unix "venv/Scripts/activate"
            . "venv/Scripts/activate"
            pip install poetry
          else
            /opt/mongodbtoolchain/v3/bin/python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install poetry
          fi

          poetry install

  check_version_update:
    - command: shell.exec
      params:
        working_dir: src
        script: |
          set -o errexit
          set -o verbose

          if [ "${is_patch}" = "true" ]; then
            wget -q https://github.com/dbradf/pypi-version-check/releases/download/v0.2.0/pypi-version-check
            chmod +x pypi-version-check
            ./pypi-version-check --check-changelog
          fi

  build_docs:
    - command: shell.exec
      params:
        working_dir: src/emm-docs
        script: |
          set -o errexit
          set -o verbose

          wget -q https://github.com/gohugoio/hugo/releases/download/v0.92.1/hugo_0.92.1_Linux-64bit.tar.gz
          tar xf hugo_0.92.1_Linux-64bit.tar.gz 
          ./hugo

pre:
- command: git.get_project
  params:
    directory: src
- func: create virtualenv

post:
- command: attach.xunit_results
  params:
    file: src/junit-*.xml

tasks:
- name: unit_tests
  commands:
  - command: shell.exec
    params:
      working_dir: src
      script: |
        set -o errexit
        set -o verbose

        export LC_ALL=C.UTF-8
        export LANG=C.UTF-8

        if [ "Windows_NT" = "$OS" ]; then
          dos2unix "venv/Scripts/activate"
          . "venv/Scripts/activate"
        else
          . venv/bin/activate
        fi
        PATH="$PATH:$HOME"
        poetry run pytest --cov=src --junitxml=junit-test-output.xml

- name: check_pypi_version
  commands:
  - func: check_version_update

- name: build_docs
  commands:
  - func: build_docs
